// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	user_segment "segment-manager/internal/store/user_segment"

	gomock "github.com/golang/mock/gomock"
)

// MockUserSegmentRepo is a mock of UserSegmentRepo interface.
type MockUserSegmentRepo struct {
	ctrl     *gomock.Controller
	recorder *MockUserSegmentRepoMockRecorder
}

// MockUserSegmentRepoMockRecorder is the mock recorder for MockUserSegmentRepo.
type MockUserSegmentRepoMockRecorder struct {
	mock *MockUserSegmentRepo
}

// NewMockUserSegmentRepo creates a new mock instance.
func NewMockUserSegmentRepo(ctrl *gomock.Controller) *MockUserSegmentRepo {
	mock := &MockUserSegmentRepo{ctrl: ctrl}
	mock.recorder = &MockUserSegmentRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserSegmentRepo) EXPECT() *MockUserSegmentRepoMockRecorder {
	return m.recorder
}

// SelectUserSegments mocks base method.
func (m *MockUserSegmentRepo) SelectUserSegments(ctx context.Context, userID int64) ([]user_segment.UserSegmentDB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectUserSegments", ctx, userID)
	ret0, _ := ret[0].([]user_segment.UserSegmentDB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectUserSegments indicates an expected call of SelectUserSegments.
func (mr *MockUserSegmentRepoMockRecorder) SelectUserSegments(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectUserSegments", reflect.TypeOf((*MockUserSegmentRepo)(nil).SelectUserSegments), ctx, userID)
}

// UpsertUserSegments mocks base method.
func (m *MockUserSegmentRepo) UpsertUserSegments(ctx context.Context, userID int64, slugsToAdd, slugsToDelete []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpsertUserSegments", ctx, userID, slugsToAdd, slugsToDelete)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpsertUserSegments indicates an expected call of UpsertUserSegments.
func (mr *MockUserSegmentRepoMockRecorder) UpsertUserSegments(ctx, userID, slugsToAdd, slugsToDelete interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpsertUserSegments", reflect.TypeOf((*MockUserSegmentRepo)(nil).UpsertUserSegments), ctx, userID, slugsToAdd, slugsToDelete)
}
